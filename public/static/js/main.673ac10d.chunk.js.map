{"version":3,"sources":["context/AuthContext.jsx","components/navigation/Navigation.Component.jsx","components/islogin/HomeLoggedIn.Component.jsx","components/islogin/HomeNotLoggedIn.Component.jsx","pages/startPage/StartPage.jsx","util/httpHook.jsx","pages/auth/AuthPage.jsx","util/Styles.jsx","components/cards/eventCard/EventCard.Component.jsx","components/categorySelector/CategorySelector.Component.jsx","pages/eventPage/EventPage.jsx","components/eventForm/EventForm.Component.jsx","pages/newEventPage/NewEventPage.jsx","components/eventForm/UpdateEventForm.Component.jsx","pages/updateEventPage/UpdateEventPage.jsx","components/cards/eventDetailCard/EventDetailCard.Component.jsx","pages/eventDetailPage/EventDetailPage.jsx","components/cards/userCard/UserCard.Component.jsx","components/friendslist/FriendList.component.jsx","pages/friendsPage/FriendsPage.jsx","components/header/Header.Component.jsx","pages/createdEventsPage/CreatedEventsPage.jsx","pages/profile/ProfilePage.jsx","pages/participationPage/ParticipationPage.jsx","App.js","util/authHook.jsx","serviceWorker.js","index.js","assets/images/Logo.png"],"names":["AuthContext","createContext","isLoggedIn","userId","token","login","logout","useStyles","makeStyles","root","width","position","zIndex","bottom","background","withRouter","classes","auth","useContext","useState","value","setValue","useEffect","className","BottomNavigation","onChange","event","newValue","showLabels","BottomNavigationAction","label","icon","component","Link","to","onClick","HomeLoggedIn","Button","variant","color","size","HomeNotLoggedIn","src","require","alt","Typography","StartPage","useHttpClient","isLoading","setIsLoading","error","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","a","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","ok","Error","message","forEach","abortCtrl","abort","clearError","AuthPage","isLoginMode","setIsLoginMode","useForm","register","handleSubmit","errors","onSubmit","user","process","JSON","stringify","email","password","name","Alert","severity","action","IconButton","aria-label","fontSize","CircularProgress","autoComplete","TextField","id","inputRef","required","minLength","helperText","pattern","type","Grid","container","item","ownStyles","EventCounter","margin","EventFormTitle","Form","display","flexDirection","marginBottom","FieldMargin","ButtonsGrouped","CancelButton","flex","marginRight","CreateButton","marginLeft","CardWrapper","maxWidth","CardAction","CardMedia","flexGrow","CardContent","height","EventDetailMedia","paddingTop","Avatar","UserCardContent","alignItems","padding","UserCardText","CategorySelector","ProfilePage","ctaButton","borderRadius","NavigationButtonsGroup","button","marginTop","Search","SearchInput","SearchButton","alignSelf","EventCard","props","loggedInUserName","setLoggedInUserName","participationSuccess","setParticipationSuccess","rmParticipationSuccess","setRmParticipationSuccess","deletionSuccess","setDeletionSuccess","useParams","creatorId","fetchUserName","participateOnEvent","participants","removeParticipation","eventDeleteHandler","Card","CardActionArea","image","title","gutterBottom","date","location","creator","CardActions","disabled","startIcon","participant","FormControl","InputLabel","Select","labelId","category","setCategory","target","MenuItem","EventPage","loadPotEvents","setLoadPotEvents","potentialEvents","fetchPotEvents","e","find","f","map","key","potParticipants","length","onDelete","prevEvents","pEventId","kategory","EventForm","loadedFriends","setLoadedFriends","Date","now","selectedDate","setSelectedDate","fetchUsers","history","useHistory","description","maxLength","utils","DateFnsUtils","disablePast","format","KeyboardButtonProps","multiline","rows","rowsMax","Autocomplete","_id","multiple","options","friends","disableCloseOnSelect","getOptionLabel","option","renderOption","selected","Fragment","Checkbox","checkedIcon","checked","style","renderInput","params","placeholder","NewEventPage","UpdateEventForm","loadedEvent","setLoadedEvent","eventId","fetchEvent","defaultValue","UpdateEventPage","EventDetailCard","CardHeader","avatar","subheader","Divider","EventDetailPage","detailId","eventDetail","setEventDetail","fetchEventById","createdBy","FriendsList","items","List","friend","FriendsPage","searchedFriend","setSearchedFriend","Header","CreatedEventsPage","loadCreatedEvents","setLoadCreatedEvents","events","fetchCreatedEvents","loggedInUser","setLoggedInUser","fetchUser","ParticipationPage","loadParticipateEvents","setLoadParticipateEvents","participateEvents","fetchParticipateEvents","App","routes","setToken","setUserId","uid","localStorage","setItem","removeItem","data","parse","getItem","useAuth","path","exact","Provider","isLocalhost","Boolean","window","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","theme","createMuiTheme","palette","primary","light","main","textPrimary","dark","secondary","contrastThreshold","tonalOffset","typography","fontFamily","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById","URL","href","origin","addEventListener","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.673ac10d.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\n\r\nexport const AuthContext = createContext({\r\n  isLoggedIn: false,\r\n  userId: null,\r\n  token: null,\r\n  login: () => {},\r\n  logout: () => {},\r\n});\r\n","import React, { useState, useContext, useEffect } from \"react\";\r\nimport Link from \"react-router-dom/Link\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\n\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport BottomNavigation from \"@material-ui/core/BottomNavigation\";\r\nimport BottomNavigationAction from \"@material-ui/core/BottomNavigationAction\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport PersonIcon from \"@material-ui/icons/Person\";\r\nimport EventIcon from \"@material-ui/icons/Event\";\r\n\r\nimport \"./Navigation.Style.scss\";\r\n\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"100%\",\r\n    position: \"fixed\",\r\n    zIndex: \"1\",\r\n    bottom: \"0\",\r\n    background: \"##318fb5\",\r\n  },\r\n});\r\n\r\nconst Navigation = () => {\r\n  const classes = useStyles();\r\n  const auth = useContext(AuthContext);\r\n  const [value, setValue] = useState(0);\r\n\r\n  useEffect(() => {\r\n    setValue(0);\r\n  }, [auth.logout]);\r\n\r\n  return (\r\n    <div className=\"navi\">\r\n      {auth.isLoggedIn && (\r\n        <BottomNavigation\r\n          value={value}\r\n          onChange={(event, newValue) => {\r\n            setValue(newValue);\r\n          }}\r\n          showLabels\r\n          className={classes.root}\r\n        >\r\n          <BottomNavigationAction\r\n            label=\"Profil\"\r\n            icon={<PersonIcon />}\r\n            component={Link}\r\n            to={`/${auth.userId}/profile`}\r\n          />\r\n          <BottomNavigationAction\r\n            label=\"Events\"\r\n            icon={<EventIcon />}\r\n            component={Link}\r\n            to={`/${auth.userId}/events`}\r\n          />\r\n          <BottomNavigationAction\r\n            label=\"Logout\"\r\n            icon={<ExitToAppIcon />}\r\n            onClick={auth.logout}\r\n          />\r\n        </BottomNavigation>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(Navigation);\r\n","import React, { useContext } from \"react\";\r\nimport Link from \"react-router-dom/Link\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport \"./HomeLoggedIn.Styles.scss\";\r\n\r\nconst HomeLoggedIn = () => {\r\n  const auth = useContext(AuthContext);\r\n  return (\r\n    <div className=\"HomeLoggedIn\">\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        component={Link}\r\n        to={`/`}\r\n        size=\"large\"\r\n      >\r\n        Über Uns\r\n      </Button>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        size=\"large\"\r\n        component={Link}\r\n        to={`/${auth.userId}/profile`}\r\n      >\r\n        Zum Profil\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomeLoggedIn;\r\n","import React from \"react\";\r\nimport Link from \"react-router-dom/Link\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nimport \"./HomeNotLoggedIn.Styles.scss\";\r\n\r\nconst HomeNotLoggedIn = () => {\r\n  return (\r\n    <div className=\"HomeNotLoggedIn\">\r\n      <div className=\"HomeNotLoggedIn--info\">\r\n        <img\r\n          src={require(\"../../assets/images/Logo.png\")}\r\n          alt=\"event-with-me\"\r\n        />\r\n        <Typography className=\"HomeNotLoggedIn--info-text\" variant=\"body1\">\r\n          Erstelle Veranstaltungen wie Geburtstage, Partys, Grillabende,\r\n          Essensverabredungen oder auch Urlaube und füge deine Freunde hinzu\r\n        </Typography>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          size=\"large\"\r\n          component={Link}\r\n          to=\"/auth\"\r\n        >\r\n          Plane Los !\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HomeNotLoggedIn;\r\n","import React, { useContext } from \"react\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\n\r\nimport HomeLoggedIn from \"../../components/islogin/HomeLoggedIn.Component\";\r\nimport HomeNotLoggedIn from \"../../components/islogin/HomeNotLoggedIn.Component\";\r\n\r\nimport \"./StartPage.scss\";\r\n\r\nconst StartPage = () => {\r\n  const auth = useContext(AuthContext);\r\n\r\n  return (\r\n    <div className=\"startpage\">\r\n      {auth.isLoggedIn ? <HomeLoggedIn /> : <HomeNotLoggedIn />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StartPage;\r\n","import { useState, useCallback, useRef, useEffect } from \"react\";\r\n\r\nexport const useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  const activeHttpRequests = useRef([]);\r\n\r\n  const sendRequest = useCallback(\r\n    async (url, method = \"GET\", body = null, headers = {}) => {\r\n      setIsLoading(true);\r\n      const httpAbortCtrl = new AbortController();\r\n      activeHttpRequests.current.push(httpAbortCtrl);\r\n\r\n      try {\r\n        const response = await fetch(url, {\r\n          method,\r\n          body,\r\n          headers,\r\n          signal: httpAbortCtrl.signal,\r\n        });\r\n\r\n        const responseData = await response.json();\r\n\r\n        activeHttpRequests.current = activeHttpRequests.current.filter(\r\n          (reqCtrl) => reqCtrl !== httpAbortCtrl\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error(responseData.message);\r\n        }\r\n\r\n        setIsLoading(false);\r\n        return responseData;\r\n      } catch (err) {\r\n        setError(err.message);\r\n        setIsLoading(false);\r\n        throw err;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      activeHttpRequests.current.forEach((abortCtrl) => abortCtrl.abort());\r\n    };\r\n  }, []);\r\n\r\n  return { isLoading, error, sendRequest, clearError };\r\n};\r\n","import React, { useState, useContext } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport { useHttpClient } from \"../../util/httpHook\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport LinkTag from \"@material-ui/core/Link\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\n\r\nimport \"./AuthPage.scss\";\r\n\r\nconst AuthPage = () => {\r\n  const auth = useContext(AuthContext);\r\n  const [isLoginMode, setIsLoginMode] = useState(false);\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const handleAuthMode = () => {\r\n    if (isLoginMode) {\r\n      setIsLoginMode(false);\r\n    } else {\r\n      setIsLoginMode(true);\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (user) => {\r\n    if (isLoginMode) {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL + \"/users/login\",\r\n          \"POST\",\r\n          JSON.stringify({\r\n            email: user.email,\r\n            password: user.password,\r\n          }),\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n          }\r\n        );\r\n        auth.login(responseData.userId, responseData.token);\r\n      } catch (err) {}\r\n    } else {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL + \"/users/signup\",\r\n          \"POST\",\r\n          JSON.stringify({\r\n            name: user.name,\r\n            email: user.email,\r\n            password: user.password,\r\n          }),\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n          }\r\n        );\r\n\r\n        auth.login(responseData.userId, responseData.token);\r\n      } catch (err) {}\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"AuthPage\">\r\n      {error && (\r\n        <Alert\r\n          severity=\"error\"\r\n          action={\r\n            <IconButton\r\n              aria-label=\"close\"\r\n              color=\"inherit\"\r\n              size=\"small\"\r\n              onClick={clearError}\r\n            >\r\n              <CloseIcon fontSize=\"inherit\" />\r\n            </IconButton>\r\n          }\r\n        >\r\n          {error}\r\n        </Alert>\r\n      )}\r\n      {isLoading && (\r\n        <div className=\"loading-modal\">\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n      <Typography component=\"h1\" variant=\"h5\" color=\"primary\">\r\n        {isLoginMode ? \"Einloggen\" : \"Registrieren\"}\r\n      </Typography>\r\n      <form autoComplete=\"off\" onSubmit={handleSubmit(onSubmit)}>\r\n        {!isLoginMode && (\r\n          <TextField\r\n            id=\"profile-name\"\r\n            label=\"Name\"\r\n            name=\"name\"\r\n            inputRef={register({ required: true, minLength: 2 })}\r\n            error={errors.name}\r\n            helperText={\r\n              errors.name &&\r\n              \"Der Name muss aus mindestens zwei Buchstaben bestehen\"\r\n            }\r\n          />\r\n        )}\r\n        <TextField\r\n          id=\"profile-email\"\r\n          label=\"E-Mail\"\r\n          name=\"email\"\r\n          inputRef={register({\r\n            required: true,\r\n            pattern: {\r\n              value: /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/i,\r\n            },\r\n          })}\r\n          error={errors.email}\r\n          type=\"email\"\r\n          helperText={errors.email && \"Invalide Email Adresse\"}\r\n        />\r\n        <TextField\r\n          id=\"profile-passwort\"\r\n          label=\"Passwort\"\r\n          name=\"password\"\r\n          type=\"password\"\r\n          inputRef={register({ required: true, minLength: 6 })}\r\n          error={errors.password}\r\n          helperText={\r\n            errors.password && \"Das Passwot muss mindestens 7 Zeichen enthalten\"\r\n          }\r\n        />\r\n\r\n        <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n          {isLoginMode ? \"Einloggen\" : \"Registrieren\"}\r\n        </Button>\r\n        <Grid container>\r\n          <Grid item>\r\n            <LinkTag variant=\"body2\" onClick={handleAuthMode}>\r\n              {isLoginMode\r\n                ? \"Noch kein account? Registrieren\"\r\n                : \"Bereits Registriert? Login\"}\r\n            </LinkTag>\r\n          </Grid>\r\n        </Grid>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuthPage;\r\n","import { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst ownStyles = makeStyles({\r\n  EventCounter: {\r\n    margin: \"1rem\",\r\n    fontSize: \"1.2rem\",\r\n  },\r\n  EventFormTitle: {\r\n    margin: \"5rem 1rem 0\",\r\n  },\r\n  Form: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    marginBottom: \"5rem\",\r\n  },\r\n  FieldMargin: {\r\n    margin: \"1rem\",\r\n  },\r\n  ButtonsGrouped: {\r\n    display: \"flex\",\r\n    margin: \"1rem\",\r\n    flexDirection: \"row\",\r\n  },\r\n  CancelButton: {\r\n    flex: 1,\r\n    marginRight: \"0.5rem\",\r\n  },\r\n  CreateButton: {\r\n    flex: 1,\r\n    marginLeft: \"0.5rem\",\r\n  },\r\n  CardWrapper: {\r\n    maxWidth: \"100%\",\r\n    margin: \"1rem\",\r\n  },\r\n  CardAction: {\r\n    display: \"flex\",\r\n  },\r\n  CardMedia: {\r\n    flexGrow: 1,\r\n    width: \"40%\",\r\n  },\r\n  CardContent: {\r\n    flexGrow: 1,\r\n    width: \"60%\",\r\n    height: \"8rem\",\r\n  },\r\n  EventDetailMedia: {\r\n    height: 0,\r\n    paddingTop: \"56.25%\", // 16:9\r\n  },\r\n  Avatar: {\r\n    background: \"#318fb5\",\r\n  },\r\n  UserCardContent: {\r\n    background: \"#ecf5f8\",\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    padding: \"1rem !important\",\r\n  },\r\n  UserCardText: {\r\n    marginLeft: \"1rem\",\r\n    color: \"#318fb5\",\r\n  },\r\n  CategorySelector: {\r\n    display: \"grid\",\r\n    margin: \"1rem\",\r\n  },\r\n  ProfilePage: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    margin: \"4.5rem 0 8rem\",\r\n  },\r\n  ctaButton: {\r\n    position: \"fixed\",\r\n    bottom: \"3.5rem\",\r\n    borderRadius: \"0\",\r\n    width: \"100%\",\r\n    height: \"4rem\",\r\n  },\r\n  NavigationButtonsGroup: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n    margin: \"1rem\",\r\n    alignItems: \"center\",\r\n  },\r\n  button: {\r\n    marginTop: \"1rem\",\r\n    width: \"15rem\",\r\n  },\r\n  Search: {\r\n    display: \"flex\",\r\n    flexDirection: \"column\",\r\n  },\r\n  SearchInput: {\r\n    margin: \"0.5rem 3rem\",\r\n  },\r\n  SearchButton: {\r\n    width: \"fit-content\",\r\n    margin: \"0.5rem 3rem\",\r\n    alignSelf: \"flex-end\",\r\n  },\r\n});\r\n\r\nexport default ownStyles;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useHttpClient } from \"../../../util/httpHook\";\r\nimport { useParams } from \"react-router-dom\";\r\n\r\nimport ownStyles from \"../../../util/Styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport NotInterestedIcon from \"@material-ui/icons/NotInterested\";\r\nimport FavoriteIcon from \"@material-ui/icons/Favorite\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\n\r\nimport \"./EventCard.Styles.scss\";\r\n\r\nconst EventCard = (props) => {\r\n  const classes = ownStyles();\r\n  const { isLoading, sendRequest } = useHttpClient();\r\n  const [loggedInUserName, setLoggedInUserName] = useState();\r\n  const [participationSuccess, setParticipationSuccess] = useState(false);\r\n  const [rmParticipationSuccess, setRmParticipationSuccess] = useState(false);\r\n  const [deletionSuccess, setDeletionSuccess] = useState(false);\r\n  const userId = useParams().userId;\r\n\r\n  useEffect(() => {\r\n    const fetchUserName = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL + `/users/${props.creatorId}`\r\n        );\r\n\r\n        setLoggedInUserName(responseData.user.name);\r\n      } catch (err) {}\r\n    };\r\n    fetchUserName();\r\n  }, [sendRequest, props.creatorId]);\r\n\r\n  const participateOnEvent = async () => {\r\n    try {\r\n      await sendRequest(\r\n        process.env.REACT_APP_BACKEND_URL + `/events/event/${props.id}`,\r\n        \"PUT\",\r\n        JSON.stringify({\r\n          participants: userId,\r\n        }),\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n        }\r\n      );\r\n      setParticipationSuccess(true);\r\n    } catch (err) {}\r\n  };\r\n\r\n  const removeParticipation = async () => {\r\n    try {\r\n      await sendRequest(\r\n        process.env.REACT_APP_BACKEND_URL + `/events/event/${props.id}`,\r\n        \"PATCH\",\r\n        JSON.stringify({\r\n          participants: userId,\r\n        }),\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n        }\r\n      );\r\n      setRmParticipationSuccess(true);\r\n    } catch (err) {}\r\n  };\r\n\r\n  const eventDeleteHandler = async () => {\r\n    try {\r\n      await sendRequest(\r\n        process.env.REACT_APP_BACKEND_URL + `/events/event/${props.id}`,\r\n        \"DELETE\"\r\n      );\r\n      setDeletionSuccess(true);\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <div className=\"event-card\">\r\n      {isLoading && (\r\n        <div className=\"loading-modal\">\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n      <Card className={classes.CardWrapper}>\r\n        <CardActionArea component={Link} to={`/event/${props.id}`}>\r\n          <div className={classes.CardAction}>\r\n            <CardMedia\r\n              className={classes.CardMedia}\r\n              image={props.image}\r\n              title=\"Contemplative Reptile\"\r\n            />\r\n            <CardContent className={classes.CardContent}>\r\n              <Typography gutterBottom variant=\"h6\" component=\"h6\">\r\n                {props.title}\r\n              </Typography>\r\n              <div className=\"event-card__info\">\r\n                <div className=\"event-card__info--date\">\r\n                  <p className=\"event-card__info--title\">Datum:</p>\r\n                  <p className=\"event-card__info--value\">{props.date}</p>\r\n                </div>\r\n                <div className=\"event-card__info--location\">\r\n                  <p className=\"event-card__info--title\">Ort:</p>\r\n                  <p className=\"event-card__info--value\">{props.location}</p>\r\n                </div>\r\n                <div className=\"event-card__info--user\">\r\n                  <p className=\"event-card__info--user-title\">Erstellt von</p>\r\n                  <p className=\"event-card__info--user-value\">\r\n                    {loggedInUserName && loggedInUserName}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </CardContent>\r\n          </div>\r\n        </CardActionArea>\r\n        {rmParticipationSuccess && (\r\n          <Alert severity=\"success\">\r\n            Veranstaltungs Teilnahme zurück genommen\r\n          </Alert>\r\n        )}\r\n        {participationSuccess && (\r\n          <Alert severity=\"success\">\r\n            Teilnahme an Veranstaltung erfolgreich\r\n          </Alert>\r\n        )}\r\n        {deletionSuccess && (\r\n          <Alert severity=\"success\">Veranstaltung wurde gelöscht</Alert>\r\n        )}\r\n        {!props.creator ? (\r\n          props.participant ? (\r\n            <CardActions>\r\n              <Button\r\n                size=\"small\"\r\n                color=\"primary.dark\"\r\n                startIcon={<NotInterestedIcon />}\r\n                onClick={removeParticipation}\r\n                disabled={rmParticipationSuccess}\r\n              >\r\n                Ablehnen\r\n              </Button>\r\n            </CardActions>\r\n          ) : (\r\n            <CardActions>\r\n              <Button\r\n                size=\"small\"\r\n                color=\"primary\"\r\n                startIcon={<FavoriteIcon />}\r\n                onClick={participateOnEvent}\r\n                disabled={participationSuccess}\r\n              >\r\n                Teilnehmen\r\n              </Button>\r\n            </CardActions>\r\n          )\r\n        ) : (\r\n          <CardActions>\r\n            <Button\r\n              disabled={deletionSuccess}\r\n              size=\"small\"\r\n              startIcon={<EditIcon />}\r\n              component={Link}\r\n              to={`/event/${props.id}/update`}\r\n            >\r\n              Bearbeiten\r\n            </Button>\r\n            <Button\r\n              disabled={deletionSuccess}\r\n              size=\"small\"\r\n              color=\"secondary\"\r\n              startIcon={<DeleteIcon />}\r\n              onClick={eventDeleteHandler}\r\n            >\r\n              Löschen\r\n            </Button>\r\n          </CardActions>\r\n        )}\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventCard;\r\n","import React from \"react\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport ownStyles from \"../../util/Styles\";\r\nimport Select from \"@material-ui/core/Select\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\n\r\nconst CategorySelector = (props) => {\r\n  const classes = ownStyles();\r\n\r\n  const handleChange = (event, value) => {\r\n    props.setCategory(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <FormControl variant=\"outlined\" className={classes.CategorySelector}>\r\n      <InputLabel id=\"demo-simple-select-helper-label\">Kategorie</InputLabel>\r\n      <Select\r\n        labelId=\"demo-simple-select-helper-label\"\r\n        id=\"demo-simple-select-helper\"\r\n        value={props.category}\r\n        onChange={handleChange}\r\n        label=\"Kategorie\"\r\n      >\r\n        <MenuItem value=\"\">\r\n          <em>...</em>\r\n        </MenuItem>\r\n        <MenuItem value={\"Essen & Trinken\"}>Essen und Trinken</MenuItem>\r\n        <MenuItem value={\"Grillen\"}>Grillen</MenuItem>\r\n        <MenuItem value={\"Geburtstag\"}>Geburtstag</MenuItem>\r\n        <MenuItem value={\"Party\"}>Party</MenuItem>\r\n        <MenuItem value={\"Lernen\"}>Lernen</MenuItem>\r\n        <MenuItem value={\"Urlaub\"}>Urlaub</MenuItem>\r\n        <MenuItem value={\"Sport\"}>Sport</MenuItem>\r\n        <MenuItem value={\"Spieleabend\"}>Spieleabend</MenuItem>\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n\r\nexport default CategorySelector;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useHttpClient } from \"../../util/httpHook\";\r\n\r\nimport EventCard from \"../../components/cards/eventCard/EventCard.Component\";\r\n\r\nimport { useParams } from \"react-router-dom\";\r\nimport \"./EventPage.scss\";\r\nimport CategorySelector from \"../../components/categorySelector/CategorySelector.Component\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst EventPage = () => {\r\n  const userId = useParams().userId;\r\n  const [category, setCategory] = useState(\"\");\r\n  const { isLoading, sendRequest } = useHttpClient();\r\n  const [loadPotEvents, setLoadPotEvents] = useState();\r\n\r\n  useEffect(() => {\r\n    const fetchPotEvents = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL + `/events/${userId}`\r\n        );\r\n        setLoadPotEvents(responseData.potentialEvents);\r\n      } catch (err) {}\r\n    };\r\n    fetchPotEvents();\r\n  }, [sendRequest, userId, setLoadPotEvents]);\r\n\r\n  const changeParticipation = (pEventId) => {\r\n    setLoadPotEvents((prevEvents) =>\r\n      prevEvents.filter((event) => event.id === pEventId)\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className=\"EventPage page-inverted\">\r\n      {isLoading && (\r\n        <div className=\"loading-modal\">\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n      <CategorySelector setCategory={setCategory} />\r\n      {category !== \"\"\r\n        ? loadPotEvents &&\r\n          loadPotEvents\r\n            .filter(\r\n              (e) =>\r\n                e.category === category &&\r\n                !e.participants.find((f) => f === userId)\r\n            )\r\n            .map((event) => (\r\n              <EventCard\r\n                key={event.id}\r\n                id={event.id}\r\n                title={event.title}\r\n                category={event.category}\r\n                location={event.location}\r\n                creatorId={event.creatorId}\r\n                creator={true}\r\n                participant={false}\r\n                date={event.date}\r\n                image={event.image}\r\n                potParticipants={event.potParticipants.length + 1}\r\n                participants={event.participants.length + 1}\r\n                onDelete={changeParticipation()}\r\n              />\r\n            ))\r\n        : loadPotEvents &&\r\n          loadPotEvents\r\n            .filter((e) => !e.participants.find((f) => f === userId))\r\n            .map((event) => (\r\n              <EventCard\r\n                key={event.id}\r\n                id={event.id}\r\n                title={event.title}\r\n                kategory={event.kategory}\r\n                location={event.location}\r\n                creatorId={event.creatorId}\r\n                date={event.date}\r\n                image={event.image}\r\n                potParticipants={event.potParticipants.length + 1}\r\n                participants={event.participants.length + 1}\r\n              />\r\n            ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventPage;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport { useHttpClient } from \"../../util/httpHook\";\r\n\r\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport \"date-fns\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\r\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\r\nimport CheckBoxIcon from \"@material-ui/icons/CheckBox\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport CategorySelector from \"../../components/categorySelector/CategorySelector.Component\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport ownStyles from \"../../util/Styles\";\r\n\r\nconst EventForm = () => {\r\n  const classes = ownStyles();\r\n\r\n  const { register, handleSubmit, setValue, errors } = useForm();\r\n  const [category, setCategory] = useState(\"\");\r\n  const [loadedFriends, setLoadedFriends] = useState();\r\n  const [selectedDate, setSelectedDate] = useState(\r\n    new Date(Date.now() - 0 * 24 * 60 * 60 * 1000)\r\n  );\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const auth = useContext(AuthContext);\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL + `/users/${auth.userId}/friends`\r\n        );\r\n\r\n        setLoadedFriends(responseData);\r\n      } catch (err) {}\r\n    };\r\n    fetchUsers();\r\n  }, [sendRequest, auth.userId]);\r\n\r\n  const handleParticipant = (e, value) => {\r\n    setValue(\r\n      \"potParticipants\",\r\n      value.map((userId) => {\r\n        return userId._id;\r\n      })\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    setValue(\"category\", category);\r\n  }, [category, setValue]);\r\n\r\n  useEffect(() => {\r\n    register(\"potParticipants\");\r\n    register(\"category\");\r\n  }, [register]);\r\n\r\n  const history = useHistory();\r\n  const onSubmit = async (event) => {\r\n    try {\r\n      await sendRequest(\r\n        process.env.REACT_APP_BACKEND_URL + \"/events\",\r\n        \"POST\",\r\n        JSON.stringify({\r\n          title: event.title,\r\n          description: event.description,\r\n          category: event.category,\r\n          location: event.location,\r\n          date: event.date,\r\n          creatorId: auth.userId,\r\n          image: event.image,\r\n          potParticipants: event.potParticipants,\r\n        }),\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n        }\r\n      );\r\n      history.push(`/${auth.userId}/profile`);\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <div className={classes.EventForm}>\r\n      {isLoading && (\r\n        <div className=\"loading-modal\">\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n      <Typography\r\n        className={classes.EventFormTitle}\r\n        component=\"h5\"\r\n        variant=\"h5\"\r\n        color=\"primary\"\r\n      >\r\n        Neues Event\r\n      </Typography>\r\n      <form\r\n        autoComplete=\"off\"\r\n        className={classes.Form}\r\n        onSubmit={handleSubmit(onSubmit)}\r\n      >\r\n        <TextField\r\n          className={classes.FieldMargin}\r\n          id=\"event-name\"\r\n          name=\"title\"\r\n          label=\"Name des Events\"\r\n          inputRef={register({ required: true, minLength: 3, maxLength: 20 })}\r\n          error={errors.title}\r\n          helperText={errors.title && \"Name des Events min=3 max=20\"}\r\n        />\r\n        <TextField\r\n          className={classes.FieldMargin}\r\n          id=\"event-location\"\r\n          name=\"location\"\r\n          label=\"Standort\"\r\n          inputRef={register({ required: true, minLength: 3, maxLength: 20 })}\r\n          error={errors.location}\r\n          helperText={errors.location && \"Bitte Standort angeben\"}\r\n        />\r\n        <MuiPickersUtilsProvider\r\n          className={classes.FieldMargin}\r\n          utils={DateFnsUtils}\r\n        >\r\n          <KeyboardDatePicker\r\n            disablePast={true}\r\n            className={classes.FieldMargin}\r\n            margin=\"normal\"\r\n            name=\"date\"\r\n            inputRef={register({ required: true })}\r\n            id=\"date-picker-dialog\"\r\n            label=\"Date picker dialog\"\r\n            format=\"dd/MM/yyyy\"\r\n            value={selectedDate}\r\n            onChange={handleDateChange}\r\n            KeyboardButtonProps={{\r\n              \"aria-label\": \"change date\",\r\n            }}\r\n          />\r\n        </MuiPickersUtilsProvider>\r\n        <TextField\r\n          className={classes.FieldMargin}\r\n          id=\"event-description\"\r\n          label=\"Beschreibung\"\r\n          name=\"description\"\r\n          inputRef={register({ required: true, maxLength: 200 })}\r\n          multiline\r\n          rows={5}\r\n          rowsMax={5}\r\n          variant=\"outlined\"\r\n          error={errors.description}\r\n          helperText={\r\n            errors.description &&\r\n            \"Bitte eine Beschreibung angeben max 200 Wörter\"\r\n          }\r\n        />\r\n        <CategorySelector value={category} setCategory={setCategory} />\r\n        <Autocomplete\r\n          name=\"availableParticipants\"\r\n          onChange={handleParticipant}\r\n          className={classes.FieldMargin}\r\n          multiple\r\n          id=\"checkboxes-tags-demo\"\r\n          options={loadedFriends ? loadedFriends.friends : \"\"}\r\n          disableCloseOnSelect\r\n          getOptionLabel={(option) => option.name}\r\n          renderOption={(option, { selected }) => (\r\n            <React.Fragment>\r\n              <Checkbox\r\n                icon={<CheckBoxOutlineBlankIcon fontSize=\"small\" />}\r\n                checkedIcon={<CheckBoxIcon fontSize=\"small\" />}\r\n                checked={selected}\r\n              />\r\n              {option.name}\r\n            </React.Fragment>\r\n          )}\r\n          style={{ color: \"red\" }}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              variant=\"outlined\"\r\n              label=\"Freunde\"\r\n              placeholder=\"Freunde\"\r\n            />\r\n          )}\r\n        />\r\n        {error && (\r\n          <Alert\r\n            severity=\"error\"\r\n            action={\r\n              <IconButton\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                size=\"small\"\r\n                onClick={clearError}\r\n              >\r\n                <CloseIcon fontSize=\"inherit\" />\r\n              </IconButton>\r\n            }\r\n          >\r\n            {error}\r\n          </Alert>\r\n        )}\r\n        <div className={classes.ButtonsGrouped}>\r\n          <Button\r\n            component={Link}\r\n            to={`/${auth.userId}/profile`}\r\n            variant=\"outlined\"\r\n            color=\"primary\"\r\n            className={classes.CancelButton}\r\n            startIcon={<CloseIcon />}\r\n          >\r\n            Abbrechen\r\n          </Button>\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.CreateButton}\r\n            startIcon={<AddCircleOutlineIcon />}\r\n          >\r\n            Erstellen\r\n          </Button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventForm;\r\n","import React from \"react\";\r\n\r\nimport EventForm from \"../../components/eventForm/EventForm.Component\";\r\n\r\nconst NewEventPage = () => {\r\n  return (\r\n    <div className=\"NewEventPage\">\r\n      \"hallo hier Bin ich\"\r\n      <EventForm />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NewEventPage;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { Link, useHistory, useParams } from \"react-router-dom\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\nimport { useHttpClient } from \"../../util/httpHook\";\r\n\r\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport \"date-fns\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport DateFnsUtils from \"@date-io/date-fns\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n} from \"@material-ui/pickers\";\r\nimport ownStyles from \"../../util/Styles\";\r\n\r\nconst UpdateEventForm = () => {\r\n  const classes = ownStyles();\r\n\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const [loadedEvent, setLoadedEvent] = useState();\r\n  const [selectedDate, setSelectedDate] = useState(\"\");\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const auth = useContext(AuthContext);\r\n  const eventId = useParams().eventId;\r\n\r\n  const handleDateChange = (date) => {\r\n    setSelectedDate(date);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const fetchEvent = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL + `/events/event/${eventId}`\r\n        );\r\n        setLoadedEvent(responseData.event);\r\n      } catch (err) {}\r\n    };\r\n    fetchEvent();\r\n  }, [sendRequest, eventId]);\r\n\r\n  const history = useHistory();\r\n  const onSubmit = async (event) => {\r\n    try {\r\n      await sendRequest(\r\n        process.env.REACT_APP_BACKEND_URL + `/events/event/${eventId}/edit`,\r\n        \"PATCH\",\r\n        JSON.stringify({\r\n          title: event.title,\r\n          description: event.description,\r\n          date: event.date,\r\n        }),\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n        }\r\n      );\r\n      history.push(`/${auth.userId}/profile`);\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <div className={classes.EventForm}>\r\n      {isLoading && (\r\n        <div className=\"loading-modal\">\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n      <Typography\r\n        className={classes.EventFormTitle}\r\n        component=\"h5\"\r\n        variant=\"h5\"\r\n        color=\"primary\"\r\n      >\r\n        Veranstaltung bearbeiten\r\n      </Typography>\r\n      {loadedEvent && (\r\n        <form\r\n          autoComplete=\"off\"\r\n          className={classes.Form}\r\n          onSubmit={handleSubmit(onSubmit)}\r\n        >\r\n          <TextField\r\n            className={classes.FieldMargin}\r\n            id=\"event-name\"\r\n            name=\"title\"\r\n            label=\"Name des Events\"\r\n            inputRef={register({ required: true, minLength: 3, maxLength: 20 })}\r\n            error={errors.title}\r\n            helperText={errors.title && \"Name des Events min=3 max=20\"}\r\n            defaultValue={loadedEvent.title}\r\n          />\r\n          <MuiPickersUtilsProvider\r\n            className={classes.FieldMargin}\r\n            utils={DateFnsUtils}\r\n          >\r\n            <KeyboardDatePicker\r\n              disablePast={Date.now()}\r\n              className={classes.FieldMargin}\r\n              margin=\"normal\"\r\n              name=\"date\"\r\n              inputRef={register({ required: true })}\r\n              id=\"date-picker-dialog\"\r\n              format=\"dd/MM/yyyy\"\r\n              value={selectedDate}\r\n              onChange={handleDateChange}\r\n              KeyboardButtonProps={{\r\n                \"aria-label\": \"change date\",\r\n              }}\r\n            />\r\n          </MuiPickersUtilsProvider>\r\n          <TextField\r\n            className={classes.FieldMargin}\r\n            id=\"event-description\"\r\n            label=\"Beschreibung\"\r\n            name=\"description\"\r\n            inputRef={register({ required: true, maxLength: 200 })}\r\n            multiline\r\n            rows={5}\r\n            rowsMax={5}\r\n            variant=\"outlined\"\r\n            error={errors.description}\r\n            defaultValue={loadedEvent.description}\r\n            helperText={\r\n              errors.description &&\r\n              \"Bitte eine Beschreibung angeben max 200 Wörter\"\r\n            }\r\n          />\r\n          {error && (\r\n            <Alert\r\n              severity=\"error\"\r\n              action={\r\n                <IconButton\r\n                  aria-label=\"close\"\r\n                  color=\"inherit\"\r\n                  size=\"small\"\r\n                  onClick={clearError}\r\n                >\r\n                  <CloseIcon fontSize=\"inherit\" />\r\n                </IconButton>\r\n              }\r\n            >\r\n              {error}\r\n            </Alert>\r\n          )}\r\n          <div className={classes.ButtonsGrouped}>\r\n            <Button\r\n              component={Link}\r\n              to={`/${auth.userId}/profile`}\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              className={classes.CancelButton}\r\n              startIcon={<CloseIcon />}\r\n            >\r\n              Abbrechen\r\n            </Button>\r\n            <Button\r\n              type=\"submit\"\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.CreateButton}\r\n              startIcon={<AddCircleOutlineIcon />}\r\n            >\r\n              Speichern\r\n            </Button>\r\n          </div>\r\n        </form>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateEventForm;\r\n","import React from \"react\";\r\n\r\nimport UpdateEventForm from \"../../components/eventForm/UpdateEventForm.Component\";\r\n\r\nconst UpdateEventPage = () => {\r\n  return (\r\n    <div className=\"NewEventPage\">\r\n      \"hallo hier Bin ich\"\r\n      <UpdateEventForm />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateEventPage;\r\n","import React, { useState } from \"react\";\r\nimport ownStyles from \"../../../util/Styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardHeader from \"@material-ui/core/CardHeader\";\r\nimport CardMedia from \"@material-ui/core/CardMedia\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\n\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport LocationOnIcon from \"@material-ui/icons/LocationOn\";\r\nimport EventOutlinedIcon from \"@material-ui/icons/EventOutlined\";\r\nimport DescriptionOutlinedIcon from \"@material-ui/icons/DescriptionOutlined\";\r\nimport CategoryOutlinedIcon from \"@material-ui/icons/CategoryOutlined\";\r\nimport StarRateOutlinedIcon from \"@material-ui/icons/StarRateOutlined\";\r\nimport GroupIcon from \"@material-ui/icons/Group\";\r\n\r\nimport \"./EventDetailCard.Styles.scss\";\r\n\r\nconst EventDetailCard = (props) => {\r\n  const classes = ownStyles();\r\n  // eslint-disable-next-line no-unused-vars\r\n  const [loggedInUserName, setLoggedInUserName] = useState();\r\n\r\n  return (\r\n    <Card className={classes.CardWrapper} key={1}>\r\n      <CardHeader\r\n        avatar={\r\n          <Avatar\r\n            aria-label=\"recipe\"\r\n            color=\"primary\"\r\n            className={classes.Avatar}\r\n          >\r\n            <StarRateOutlinedIcon />\r\n          </Avatar>\r\n        }\r\n        title={props.title}\r\n        subheader={props.date}\r\n      />\r\n      <CardMedia\r\n        className={classes.EventDetailMedia}\r\n        image={props.image}\r\n        title={props.title}\r\n      />\r\n      <CardContent>\r\n        <div className=\"information\">\r\n          <LocationOnIcon color=\"primary\" />\r\n          <div className=\"text\">\r\n            <Typography gutterBottom variant=\"body1\" component=\"p\">\r\n              Standort\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n              {props.location}\r\n            </Typography>\r\n          </div>\r\n        </div>\r\n        <Divider />\r\n        <div className=\"information\">\r\n          <EventOutlinedIcon color=\"primary\" />\r\n          <div className=\"text\">\r\n            <Typography gutterBottom variant=\"body1\" component=\"p\">\r\n              Datum\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n              {props.date}\r\n            </Typography>\r\n          </div>\r\n        </div>\r\n        <Divider />\r\n        <div className=\"information\">\r\n          <CategoryOutlinedIcon color=\"primary\" />\r\n          <div className=\"text\">\r\n            <Typography gutterBottom variant=\"body1\" component=\"p\">\r\n              Kategorie\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n              {props.category}\r\n            </Typography>\r\n          </div>\r\n        </div>\r\n        <Divider />\r\n        <div className=\"information\">\r\n          <DescriptionOutlinedIcon color=\"primary\" />\r\n          <div className=\"text\">\r\n            <Typography gutterBottom variant=\"body1\" component=\"p\">\r\n              Beschreibung\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n              {props.description}\r\n            </Typography>\r\n          </div>\r\n        </div>\r\n        <Divider />\r\n        <div className=\"information\">\r\n          <GroupIcon color=\"primary\" />\r\n          <div className=\"text\">\r\n            <Typography gutterBottom variant=\"body1\" component=\"p\">\r\n              Teilnehmer\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n              {props.participants + \"/\" + props.potParticipants}\r\n            </Typography>\r\n          </div>\r\n        </div>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default EventDetailCard;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useHttpClient } from \"../../util/httpHook\";\r\n\r\nimport EventDetailCard from \"../../components/cards/eventDetailCard/EventDetailCard.Component\";\r\n\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst EventDetailPage = (detailId) => {\r\n  const eventId = useParams().eventId;\r\n  const [eventDetail, setEventDetail] = useState();\r\n  const { isLoading, sendRequest } = useHttpClient();\r\n\r\n  useEffect(() => {\r\n    const fetchEventById = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL + `/events/event/${eventId}`\r\n        );\r\n        setEventDetail(responseData.event);\r\n      } catch (err) {}\r\n    };\r\n    fetchEventById();\r\n  }, [sendRequest, eventId]);\r\n\r\n  return (\r\n    <div className=\"page\">\r\n      {isLoading && (\r\n        <div className=\"loading-modal\">\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n      {eventDetail && (\r\n        <EventDetailCard\r\n          id={eventDetail.id}\r\n          title={eventDetail.title}\r\n          category={eventDetail.category}\r\n          location={eventDetail.location}\r\n          createdBy={eventDetail.createdBy}\r\n          date={eventDetail.date}\r\n          image={eventDetail.image}\r\n          potParticipants={eventDetail.potParticipants.length + 1}\r\n          participants={eventDetail.participants.length + 1}\r\n          description={eventDetail.description}\r\n        />\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventDetailPage;\r\n","import React from \"react\";\r\n\r\nimport ownStyles from \"../../../util/Styles\";\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\n\r\nconst EventCard = (props) => {\r\n  const classes = ownStyles();\r\n\r\n  return (\r\n    <div className=\"user-card\">\r\n      <Card className={classes.CardWrapper}>\r\n        <CardContent className={classes.UserCardContent}>\r\n          <Avatar\r\n            src={\"https://robohash.org/\" + props.name}\r\n            className={classes.Avatar}\r\n          ></Avatar>\r\n          <div className={classes.UserCardText}>\r\n            <Typography>{props.name}</Typography>\r\n            <Typography>{props.email}</Typography>\r\n          </div>\r\n        </CardContent>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EventCard;\r\n","import React from \"react\";\r\nimport List from \"@material-ui/core/List\";\r\nimport UserCard from \"../cards/userCard/UserCard.Component\";\r\n\r\nconst FriendsList = ({ items }) => {\r\n  return (\r\n    <List>\r\n      {items.friends.map((friend) => (\r\n        <li key={friend._id}>\r\n          <UserCard\r\n            key={friend._id}\r\n            id={friend._id}\r\n            name={friend.name}\r\n            email={friend.email}\r\n          />\r\n        </li>\r\n      ))}\r\n    </List>\r\n  );\r\n};\r\n\r\nexport default FriendsList;\r\n","import React, { useEffect, useState, useContext } from \"react\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { useHttpClient } from \"../../util/httpHook\";\r\nimport { AuthContext } from \"../../context/AuthContext\";\r\n\r\nimport ownStyles from \"../../util/Styles\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport CloseIcon from \"@material-ui/icons/Close\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\n\r\nimport FriendsList from \"../../components/friendslist/FriendList.component\";\r\n\r\nconst FriendsPage = () => {\r\n  const classes = ownStyles();\r\n  const [searchedFriend, setSearchedFriend] = useState(false);\r\n  const [loadedFriends, setLoadedFriends] = useState();\r\n  const { register, handleSubmit, errors } = useForm();\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const auth = useContext(AuthContext);\r\n\r\n  useEffect(() => {\r\n    const fetchUsers = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL + `/users/${auth.userId}/friends`\r\n        );\r\n\r\n        setLoadedFriends(responseData);\r\n      } catch (err) {}\r\n    };\r\n    fetchUsers();\r\n  }, [sendRequest, auth.userId]);\r\n\r\n  const onSubmit = async (friend) => {\r\n    try {\r\n      await sendRequest(\r\n        process.env.REACT_APP_BACKEND_URL + `/users//${auth.userId}/friends`,\r\n        \"PATCH\",\r\n        JSON.stringify({\r\n          email: friend.email,\r\n        }),\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n        }\r\n      );\r\n      setSearchedFriend(true);\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <div className=\"FriendsPage page-inverted\">\r\n      <form className={classes.Search} onSubmit={handleSubmit(onSubmit)}>\r\n        {searchedFriend ? (\r\n          <Alert\r\n            action={\r\n              <IconButton\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                size=\"small\"\r\n                onClick={() => {\r\n                  setSearchedFriend(false);\r\n                }}\r\n              >\r\n                <CloseIcon fontSize=\"inherit\" />\r\n              </IconButton>\r\n            }\r\n          >\r\n            Benutzer wurde gefunden\r\n          </Alert>\r\n        ) : (\r\n          \"\"\r\n        )}{\" \"}\r\n        {error ? (\r\n          <Alert\r\n            severity=\"error\"\r\n            action={\r\n              <IconButton\r\n                aria-label=\"close\"\r\n                color=\"inherit\"\r\n                size=\"small\"\r\n                onClick={clearError}\r\n              >\r\n                <CloseIcon fontSize=\"inherit\" />\r\n              </IconButton>\r\n            }\r\n          >\r\n            {error}\r\n          </Alert>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <TextField\r\n          id=\"profile-email\"\r\n          className={classes.SearchInput}\r\n          label=\"E-Mail\"\r\n          name=\"email\"\r\n          inputRef={register({\r\n            required: true,\r\n            pattern: {\r\n              value: /^[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,4}$/i,\r\n            },\r\n          })}\r\n          error={errors.email}\r\n          type=\"email\"\r\n          helperText={errors.email && \"Invalide Email Adresse\"}\r\n        />\r\n        <Button\r\n          type=\"submit\"\r\n          className={classes.SearchButton}\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          size=\"large\"\r\n          startIcon={<SearchIcon />}\r\n        >\r\n          Freunde hinzufügen\r\n        </Button>\r\n      </form>\r\n\r\n      {/* <FriendsList items={loadedFriends} /> */}\r\n      {!isLoading && loadedFriends && <FriendsList items={loadedFriends} />}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FriendsPage;\r\n","import React from \"react\";\r\nimport Link from \"react-router-dom/Link\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\n\r\nimport \"./Header.Styles.scss\";\r\n\r\nconst Header = (props) => {\r\n  return (\r\n    <div className=\"header\">\r\n      <div className=\"header--logo\">\r\n        <Button color=\"inherit\" component={Link} to=\"/\">\r\n          <img\r\n            src={require(\"../../assets/images/Logo.png\")}\r\n            alt=\"event-with-me\"\r\n          />\r\n        </Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useHttpClient } from \"../../util/httpHook\";\r\n\r\nimport EventCard from \"../../components/cards/eventCard/EventCard.Component\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ownStyles from \"../../util/Styles\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst CreatedEventsPage = () => {\r\n  const classes = ownStyles();\r\n  const userId = useParams().userId;\r\n  const { isLoading, sendRequest } = useHttpClient();\r\n  const [loadCreatedEvents, setLoadCreatedEvents] = useState();\r\n\r\n  useEffect(() => {\r\n    const fetchCreatedEvents = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL + `/events/${userId}/created-events`\r\n        );\r\n        setLoadCreatedEvents(responseData.events);\r\n      } catch (err) {}\r\n    };\r\n    fetchCreatedEvents();\r\n  }, [sendRequest, userId]);\r\n\r\n  // const deletedEventHandler = (deletedEventId) => {\r\n  //   setLoadCreatedEvents((events) =>\r\n  //     events.filter((event) => event.id !== deletedEventId)\r\n  //   );\r\n  // };\r\n\r\n  return (\r\n    <div className=\"CreatedEventsPage page-inverted\">\r\n      {isLoading && (\r\n        <div className=\"loading-modal\">\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n      <Typography\r\n        gutterBottom\r\n        variant=\"body1\"\r\n        color=\"primary\"\r\n        className={classes.EventCounter}\r\n        component=\"h6\"\r\n      >\r\n        {loadCreatedEvents && loadCreatedEvents.length} erstellte\r\n        Veranstaltungen\r\n      </Typography>\r\n\r\n      {loadCreatedEvents &&\r\n        loadCreatedEvents.map((event) => (\r\n          <EventCard\r\n            key={event.id}\r\n            id={event.id}\r\n            title={event.title}\r\n            kategory={event.kategory}\r\n            location={event.location}\r\n            creatorId={event.creatorId}\r\n            date={event.date}\r\n            image={event.image}\r\n            creator={true}\r\n            participant={false}\r\n          />\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CreatedEventsPage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport Link from \"react-router-dom/Link\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useHttpClient } from \"../../util/httpHook\";\r\n\r\nimport Button from \"@material-ui/core/Button\";\r\nimport AddCircleOutlineIcon from \"@material-ui/icons/AddCircleOutline\";\r\nimport ownStyles from \"../../util/Styles\";\r\n\r\nimport UserCard from \"../../components/cards/userCard/UserCard.Component\";\r\n\r\nconst ProfilePage = () => {\r\n  const classes = ownStyles();\r\n  const [loggedInUser, setLoggedInUser] = useState();\r\n  const { sendRequest } = useHttpClient();\r\n\r\n  const userId = useParams().userId;\r\n\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL + `/users/${userId}`\r\n        );\r\n\r\n        setLoggedInUser(responseData);\r\n      } catch (err) {}\r\n    };\r\n    fetchUser();\r\n  }, [sendRequest, userId]);\r\n\r\n  return (\r\n    <div className={classes.ProfilePage}>\r\n      {loggedInUser && (\r\n        <UserCard\r\n          key={loggedInUser.user.id}\r\n          id={loggedInUser.user.id}\r\n          name={loggedInUser.user.name}\r\n          email={loggedInUser.user.email}\r\n        />\r\n      )}\r\n      <div className={classes.NavigationButtonsGroup}>\r\n        <Button\r\n          className={classes.button}\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          component={Link}\r\n          to={`/${userId}/my-events`}\r\n          size=\"large\"\r\n        >\r\n          Erstellte Events\r\n        </Button>\r\n        <Button\r\n          className={classes.button}\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          component={Link}\r\n          to={`/${userId}/participation`}\r\n          size=\"large\"\r\n        >\r\n          Teilnahmen\r\n        </Button>\r\n        <Button\r\n          className={classes.button}\r\n          variant=\"outlined\"\r\n          color=\"primary\"\r\n          component={Link}\r\n          to={`/${userId}/friends`}\r\n          size=\"large\"\r\n        >\r\n          Freunde\r\n        </Button>\r\n      </div>\r\n      <Button\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        className={classes.ctaButton}\r\n        startIcon={<AddCircleOutlineIcon />}\r\n        size=\"large\"\r\n        component={Link}\r\n        to={`/event/new`}\r\n      >\r\n        Event erstellen\r\n      </Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfilePage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useHttpClient } from \"../../util/httpHook\";\r\n\r\nimport EventCard from \"../../components/cards/eventCard/EventCard.Component\";\r\n\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ownStyles from \"../../util/Styles\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\n\r\nconst ParticipationPage = () => {\r\n  const classes = ownStyles();\r\n  const userId = useParams().userId;\r\n  const { isLoading, sendRequest } = useHttpClient();\r\n  const [loadParticipateEvents, setLoadParticipateEvents] = useState();\r\n\r\n  useEffect(() => {\r\n    const fetchParticipateEvents = async () => {\r\n      try {\r\n        const responseData = await sendRequest(\r\n          process.env.REACT_APP_BACKEND_URL + `/events/${userId}/participant`\r\n        );\r\n        setLoadParticipateEvents(responseData.participateEvents);\r\n      } catch (err) {}\r\n    };\r\n    fetchParticipateEvents();\r\n  }, [sendRequest, userId]);\r\n\r\n  return (\r\n    <div className=\"ParticipationPage page-inverted\">\r\n      {isLoading && (\r\n        <div className=\"loading-modal\">\r\n          <CircularProgress />\r\n        </div>\r\n      )}\r\n      <Typography\r\n        gutterBottom\r\n        variant=\"body1\"\r\n        color=\"primary\"\r\n        className={classes.EventCounter}\r\n        component=\"h6\"\r\n      >\r\n        Teilnahme an {loadParticipateEvents && loadParticipateEvents.length}{\" \"}\r\n        Veranstaltungen\r\n      </Typography>\r\n\r\n      {loadParticipateEvents &&\r\n        loadParticipateEvents.map((event) => (\r\n          <EventCard\r\n            key={event.id}\r\n            id={event.id}\r\n            title={event.title}\r\n            kategory={event.kategory}\r\n            location={event.location}\r\n            creatorId={event.creatorId}\r\n            date={event.date}\r\n            image={event.image}\r\n            creator={false}\r\n            participant={true}\r\n          />\r\n        ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ParticipationPage;\r\n","import React from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from \"react-router-dom\";\nimport { AuthContext } from \"./context/AuthContext\";\nimport { useAuth } from \"./util/authHook\";\n\nimport Navigation from \"./components/navigation/Navigation.Component\";\nimport StartPage from \"./pages/startPage/StartPage\";\nimport AuthPage from \"./pages/auth/AuthPage\";\nimport EventPage from \"./pages/eventPage/EventPage\";\nimport NewEventPage from \"./pages/newEventPage/NewEventPage\";\nimport UpdateEventPage from \"./pages/updateEventPage/UpdateEventPage\";\nimport EventDetailPage from \"./pages/eventDetailPage/EventDetailPage\";\nimport FriendsPage from \"./pages/friendsPage/FriendsPage\";\nimport Header from \"./components/header/Header.Component\";\nimport CreatedEventsPage from \"./pages/createdEventsPage/CreatedEventsPage\";\nimport ProfilePage from \"./pages/profile/ProfilePage\";\nimport ParticipationPage from \"./pages/participationPage/ParticipationPage\";\n\nimport \"./App.css\";\n\nfunction App() {\n  const { token, login, logout, userId } = useAuth();\n\n  let routes;\n\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact component={StartPage} />\n        <Route path=\"/:userId/profile\" exact component={ProfilePage} />\n        <Route path=\"/:userId/my-events\" exact component={CreatedEventsPage} />\n        <Route path=\"/:userId/friends\" exact component={FriendsPage} />\n        <Route path={`/event/new`} exact component={NewEventPage} />\n        <Route\n          path={`/event/:eventId/update`}\n          exact\n          component={UpdateEventPage}\n        />\n        <Route path=\"/:userId/events\" exact component={EventPage} />\n        <Route path=\"/event/:eventId\" exact component={EventDetailPage} />\n        <Route\n          path=\"/:userId/participation\"\n          exact\n          component={ParticipationPage}\n        />\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact component={StartPage} />\n        <Route path=\"/auth\" exact component={AuthPage} />\n        <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        isLoggedIn: !!token,\n        token: token,\n        userId: userId,\n        login: login,\n        logout: logout,\n      }}\n    >\n      <Router>\n        <Header></Header>\n        <main>{routes}</main>\n        <Navigation />\n      </Router>\n    </AuthContext.Provider>\n  );\n}\n\nexport default App;\n","import { useState, useCallback, useEffect } from \"react\";\r\n\r\nexport const useAuth = () => {\r\n  const [token, setToken] = useState(false);\r\n  const [userId, setUserId] = useState(false);\r\n\r\n  const login = useCallback((uid, token) => {\r\n    setToken(token);\r\n    setUserId(uid);\r\n    localStorage.setItem(\r\n      \"userData\",\r\n      JSON.stringify({ userId: uid, token: token })\r\n    );\r\n  }, []);\r\n\r\n  const logout = useCallback(() => {\r\n    setToken(null);\r\n    setUserId(null);\r\n    localStorage.removeItem(\"userData\");\r\n  }, []);\r\n\r\n  useEffect(\r\n    () => {\r\n      const data = JSON.parse(localStorage.getItem(\"userData\"));\r\n      if (data && data.token) {\r\n        login(data.userId, data, token);\r\n      }\r\n    }, // eslint-disable-next-line\r\n    [login]\r\n  );\r\n\r\n  return { token, login, logout, userId };\r\n};\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n    window.location.hostname === 'localhost' ||\r\n      // [::1] is the IPv6 localhost address.\r\n      window.location.hostname === '[::1]' ||\r\n      // 127.0.0.0/8 are considered localhost for IPv4.\r\n      window.location.hostname.match(\r\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n      )\r\n  );\r\n  \r\n  export function register(config) {\r\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n      // The URL constructor is available in all browsers that support SW.\r\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n      if (publicUrl.origin !== window.location.origin) {\r\n        // Our service worker won't work if PUBLIC_URL is on a different origin\r\n        // from what our page is served on. This might happen if a CDN is used to\r\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n        return;\r\n      }\r\n  \r\n      window.addEventListener('load', () => {\r\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n  \r\n        if (isLocalhost) {\r\n          // This is running on localhost. Let's check if a service worker still exists or not.\r\n          checkValidServiceWorker(swUrl, config);\r\n  \r\n          // Add some additional logging to localhost, pointing developers to the\r\n          // service worker/PWA documentation.\r\n          navigator.serviceWorker.ready.then(() => {\r\n            console.log(\r\n              'This web app is being served cache-first by a service ' +\r\n                'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n            );\r\n          });\r\n        } else {\r\n          // Is not localhost. Just register service worker\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      });\r\n    }\r\n  }\r\n  \r\n  function registerValidSW(swUrl, config) {\r\n    navigator.serviceWorker\r\n      .register(swUrl)\r\n      .then(registration => {\r\n        registration.onupdatefound = () => {\r\n          const installingWorker = registration.installing;\r\n          if (installingWorker == null) {\r\n            return;\r\n          }\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                // At this point, the updated precached content has been fetched,\r\n                // but the previous service worker will still serve the older\r\n                // content until all client tabs are closed.\r\n                console.log(\r\n                  'New content is available and will be used when all ' +\r\n                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n                );\r\n  \r\n                // Execute callback\r\n                if (config && config.onUpdate) {\r\n                  config.onUpdate(registration);\r\n                }\r\n              } else {\r\n                // At this point, everything has been precached.\r\n                // It's the perfect time to display a\r\n                // \"Content is cached for offline use.\" message.\r\n                console.log('Content is cached for offline use.');\r\n  \r\n                // Execute callback\r\n                if (config && config.onSuccess) {\r\n                  config.onSuccess(registration);\r\n                }\r\n              }\r\n            }\r\n          };\r\n        };\r\n      })\r\n      .catch(error => {\r\n        console.error('Error during service worker registration:', error);\r\n      });\r\n  }\r\n  \r\n  function checkValidServiceWorker(swUrl, config) {\r\n    // Check if the service worker can be found. If it can't reload the page.\r\n    fetch(swUrl, {\r\n      headers: { 'Service-Worker': 'script' },\r\n    })\r\n      .then(response => {\r\n        // Ensure service worker exists, and that we really are getting a JS file.\r\n        const contentType = response.headers.get('content-type');\r\n        if (\r\n          response.status === 404 ||\r\n          (contentType != null && contentType.indexOf('javascript') === -1)\r\n        ) {\r\n          // No service worker found. Probably a different app. Reload the page.\r\n          navigator.serviceWorker.ready.then(registration => {\r\n            registration.unregister().then(() => {\r\n              window.location.reload();\r\n            });\r\n          });\r\n        } else {\r\n          // Service worker found. Proceed as normal.\r\n          registerValidSW(swUrl, config);\r\n        }\r\n      })\r\n      .catch(() => {\r\n        console.log(\r\n          'No internet connection found. App is running in offline mode.'\r\n        );\r\n      });\r\n  }\r\n  \r\n  export function unregister() {\r\n    if ('serviceWorker' in navigator) {\r\n      navigator.serviceWorker.ready\r\n        .then(registration => {\r\n          registration.unregister();\r\n        })\r\n        .catch(error => {\r\n          console.error(error.message);\r\n        });\r\n    }\r\n  }\r\n  ","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: \"#b0cac7\",\n      main: \"#318fb5\",\n      textPrimary: \"#fff\",\n      dark: \"#00416d\",\n    },\n    secondary: {\n      light: \"#0066ff\",\n      main: \"#ce1126\",\n      textPrimary: \"#fff\",\n    },\n    error: {\n      main: \"#ce1126\",\n      textPrimary: \"#fff\",\n    },\n    contrastThreshold: 3,\n    tonalOffset: 0.2,\n  },\n  typography: {\n    fontFamily: \"Nunito Sans\",\n  },\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nexport default theme;\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n","module.exports = __webpack_public_path__ + \"static/media/Logo.c98ff47c.png\";"],"sourceRoot":""}